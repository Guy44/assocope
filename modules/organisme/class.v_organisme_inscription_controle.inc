<?php


/***********************************************************************
	ATK Node: v_organisme_inscription_controle
	Table: v_organisme_inscription_controle
	Date: 07/29/07

	
	This code was automatically generated by ATK Code Generator v2.2
	
	@Author Jorge Garifuna (GariDigital.com) <info@GariDigital.com>
	
	Your are free to modify this code to fit your needs. 
	All I ask for is for your to keep this notice on top of the code
************************************************************************/		
			

atkimport("atk.utils.atkmessagequeue");
useattrib("atknumberattribute");

useattrib("atkrowcounter");
class v_organisme_inscription_controle extends atkNode{

		var $table = "v_organisme_inscription_controle";
		var $primary_field = "";
		var $module = "v_organisme_inscription_controle";
		var $node = "v_organisme_inscription_controle";
		var $index_field = "";
		var $order_field = "";

		// start constructor
		function v_organisme_inscription_controle(){
			// tabs labels

			// call constructor parent
			$this->atkNode($this->node,NF_ADD_LINK | NF_MRA | NF_TRACK_CHANGES | NF_ADDAFTERADD);

			//event log
			$this->addListener(atknew("atk.utils.atkeventlog"));
			// node attributes
			$this->add(new atkRowCounter("#"),NULL,1);
			$this->add(new atkNumberAttribute("id_organisme", 0,10,0),NULL,50);
			$this->add(new atkAttribute("organisme", 0,100),NULL,55);
			$this->add(new atkNumberAttribute("creer_adresse_postale_o_n", 0,10,0),NULL,100);
 
  			$this->add(new atkNumberAttribute("inscrire_federation_o_n", 0,10,0),NULL,200);

			$this->add(new atkNumberAttribute("creer_cotisation_federation_o_n", 0,10,0),NULL,210);

			$this->add(new atkNumberAttribute("reporter_inscription_federation_o_n", 0,10,0),NULL,220);

			$this->add(new atkNumberAttribute("reporter_radiation_federation_o_n", 0,10,0),NULL,230);

			$this->add(new atkNumberAttribute("regler_cotisation_federation_o_n", 0,10,0),NULL,240);

			$this->add(new atkNumberAttribute("imprimer_adresse_o_n", 0,10,0),NULL,300);

			$this->add(new atkNumberAttribute("envoyer_recu_fiscal_o_n", 0,10,0),NULL,400);

			$this->add(new atkNumberAttribute("envoyer_timbre_o_n", 0,10,0),NULL,500);

			$this->add(new atkNumberAttribute("envoyer_carte_adherent_o_n", 0,10,0),NULL,600);

			$this->add(new atkNumberAttribute("reclamer_cotisation_o_n", 0,10,0),NULL,700);

			$this->add(new atkNumberAttribute("avertir_radiation_cotisation_o_n", 0,10,0),NULL,800);

			$this->add(new atkNumberAttribute("effectuer_radiation_cotisation_o_n", 0,10,0),NULL,900);

			$this->add(new atkNumberAttribute("avertir_radiation_adhesion_o_n", 0,10,0),NULL,1000);

			$this->add(new atkNumberAttribute("effectuer_radiation_adhesion_o_n", 0,10,0),NULL,1100);
			$this->add(new atkNumberAttribute("adhesion_et_pas_de_cotisation_o_n", 0,10,0),NULL,1105);

			//smart search
			$this->setExtendedSearchAction('smartsearch');
			// relations
				$this->setSecurityAlias("organisme.organisme");

			// index, order and table setups
			$this->setIndex($this->index_field); // set index attribute
			$this->setOrder($this->order_field); // set order attribute(s)
			$this->setTable($this->table); // set node table

		}// end constructor
		
		function creer_adresse_postale_o_n_edit($record,$mode)
    	{ if ($record["creer_adresse_postale_o_n"]>0)
    	{        return href(dispatch_url("individu.individu", "admin", 
    		array('atkfilter'=>"individu.id in (select id_individu from individu_inscription where creer_adresse_postale_o_n='1' and id_organisme='".$record['id_organisme']."')")),
    		 text($record['creer_adresse_postale_o_n']), SESSION_NESTED);
    	}
    	
    	}
		
		function inscrire_federation_o_n_edit($record,$mode)
    	{ if ($record["inscrire_federation_o_n"]>0)
    	{        return href(dispatch_url("individu.individu", "admin", 
    		 array('atkfilter'=>"individu.id in (select id_individu from individu_inscription where inscrire_federation_o_n=1 and id_organisme=".$record['id_organisme'].")"), "dispatch.php"), 
    		      text($record['inscrire_federation_o_n']), SESSION_NESTED);
    	}
    	
    	}
		function creer_cotisation_federation_o_n_edit($record,$mode)
    	{ if ($record["creer_cotisation_federation_o_n"]>0)
    	{        return href(dispatch_url("individu.individu", "admin", 
    		 array('atkfilter'=>"individu.id in (select id_individu from individu_inscription where creer_cotisation_federation_o_n=1 and id_organisme=".$record['id_organisme'].")"), "dispatch.php"),
    		     text($record['creer_cotisation_federation_o_n']), SESSION_NESTED);
    	}
    	
    	}
		function reporter_inscription_federation_o_n_edit($record,$mode)
    	{ if ($record["reporter_inscription_federation_o_n"]>0)
    	{        return href(dispatch_url("individu.individu", "admin", 
    		  array('atkfilter'=>"individu.id in (select id_individu from individu_inscription where reporter_inscription_federation_o_n=1 and id_organisme=".$record['id_organisme'].")"), "dispatch.php"),
    		     text($record['reporter_inscription_federation_o_n']), SESSION_NESTED);
    	}
    	
    	}
		function reporter_radiation_federation_o_n_edit($record,$mode)
    	{ if ($record["reporter_radiation_federation_o_n"]>0)
    	{        return href(dispatch_url("individu.individu", "admin", 
    		 array('atkfilter'=>"individu.id in (select id_individu from individu_inscription where reporter_radiation_federation_o_n=1 and id_organisme=".$record['id_organisme'].")"), "dispatch.php"),
    		   text($record['reporter_radiation_federation_o_n']), SESSION_NESTED);
    	}
    	
    	}
		function regler_cotisation_federation_o_n_edit($record,$mode)
    	{ if ($record["regler_cotisation_federation_o_n"]>0)
    	{        return href(dispatch_url("individu.individu", "admin", 
    		array('atkfilter'=>"individu.id in (select id_individu from individu_inscription where regler_cotisation_federation_o_n=1 and id_organisme=".$record['id_organisme'].")"), "dispatch.php"),
    		   text($record['regler_cotisation_federation_o_n']), SESSION_NESTED);
    	}
    	
    	}
		function imprimer_adresse_o_n_edit($record,$mode)
    	{ if ($record["imprimer_adresse_o_n"]>0)
    	{        return href(dispatch_url("individu.individu", "admin", 
    		array('atkfilter'=>"individu.id in (select id_individu from individu_inscription where imprimer_adresse_o_n=1 and id_organisme=".$record['id_organisme'].")"), "dispatch.php"),
    		   text($record['imprimer_adresse_o_n']), SESSION_NESTED);
    	}
    	
    	}
		function envoyer_recu_fiscal_o_n_edit($record,$mode)
    	{ if ($record["envoyer_recu_fiscal_o_n"]>0)
    	{        return href(dispatch_url("individu.individu", "admin", 
    		 array('atkfilter'=>"individu.id in (select id_individu from individu_inscription where envoyer_recu_fiscal_o_n=1 and id_organisme=".$record['id_organisme'].")"), "dispatch.php"),
    		   text($record['envoyer_recu_fiscal_o_n']), SESSION_NESTED);
    	}
    	
    	}
		function envoyer_timbre_o_n_edit($record,$mode)
    	{ if ($record["envoyer_timbre_o_n"]>0)
    	{        return href(dispatch_url("individu.individu", "admin", 
    		  array('atkfilter'=>"individu.id in (select id_individu from individu_inscription where envoyer_timbre_o_n=1 and id_organisme=".$record['id_organisme'].")"), "dispatch.php"),
    		   text($record['envoyer_timbre_o_n']), SESSION_NESTED);
    	}
    	
    	}
		function envoyer_carte_adherent_o_n_edit($record,$mode)
    	{ if ($record["envoyer_carte_adherent_o_n"]>0)
    	{        return href(dispatch_url("individu.individu", "admin", 
    		  array('atkfilter'=>"individu.id in (select id_individu from individu_inscription where envoyer_carte_adherent_o_n=1 and id_organisme=".$record['id_organisme'].")"), "dispatch.php"),
    		  text($record['envoyer_carte_adherent_o_n']), SESSION_NESTED);
    	}
    	
    	}
		function reclamer_cotisation_o_n_edit($record,$mode)
    	{ if ($record["reclamer_cotisation_o_n"]>0)
    	{        return href(dispatch_url("individu.individu", "admin", 
    		 array('atkfilter'=>"individu.id in (select id_individu from individu_inscription where reclamer_cotisation_o_n=1 and id_organisme=".$record['id_organisme'].")"), "dispatch.php"),
    		 text($record['reclamer_cotisation_o_n']), SESSION_NESTED);
    	}
    	
    	}
		function avertir_radiation_cotisation_o_n_edit($record,$mode)
    	{ if ($record["avertir_radiation_cotisation_o_n"]>0)
    	{        return href(dispatch_url("individu.individu", "admin", 
    		 array('atkfilter'=>"individu.id in (select id_individu from individu_inscription where avertir_radiation_cotisation_o_n=1 and id_organisme=".$record['id_organisme'].")"), "dispatch.php"),
    		 text($record['avertir_radiation_cotisation_o_n']), SESSION_NESTED);
    	}
    	
    	}
    	
		function effectuer_radiation_cotisation_o_n_edit($record,$mode)
    	{ if ($record["effectuer_radiation_cotisation_o_n"]>0)
    	{        return href(dispatch_url("individu.individu", "admin", 
    		array('atkfilter'=>"individu.id in (select id_individu from individu_inscription where effectuer_radiation_cotisation_o_n=1 and id_organisme=".$record['id_organisme'].")"), "dispatch.php"),
    		 text($record['effectuer_radiation_cotisation_o_n']), SESSION_NESTED);
    	}
    	
    	}
		
		function avertir_radiation_adhesion_o_n_edit($record,$mode)
    	{ if ($record["avertir_radiation_adhesion_o_n"]>0)
    	{        return href(dispatch_url("individu.individu", "admin", 
    		array('atkfilter'=>"individu.id in (select id_individu from individu_inscription where avertir_radiation_adhesion_o_n=1 and id_organisme=".$record['id_organisme'].")"), "dispatch.php"),
    		 text($record['avertir_radiation_adhesion_o_n']), SESSION_NESTED);
    	}
    	
    	}
    	
    	function effectuer_radiation_adhesion_o_n_edit($record,$mode)
    	{ if ($record["effectuer_radiation_adhesion_o_n"]>0)
    	{        return href(dispatch_url("individu.individu", "admin", 
    		array('atkfilter'=>"individu.id in (select id_individu from individu_inscription where effectuer_radiation_adhesion_o_n=1 and id_organisme=".$record['id_organisme'].")"), "dispatch.php"),
    		 text($record['effectuer_radiation_adhesion_o_n']), SESSION_NESTED);
    	}
    	
    	}
	
   	function adhesion_et_pas_de_cotisation_o_n_edit($record,$mode)
    	{ if ($record["adhesion_et_pas_de_cotisation_o_n"]>0)
    	{        return href(dispatch_url("individu.individu", "admin", 
    		array('atkfilter'=>"individu.id in (select id_individu from individu_inscription where adhesion_et_pas_de_cotisation_o_n=1 and id_organisme=".$record['id_organisme'].")"), "dispatch.php"),
    		 text($record['adhesion_et_pas_de_cotisation_o_n']), SESSION_NESTED);
    	}
    	
    	}
          function action_admin(&$handler){ 
               global $config_recordsperpage; 
               $config_recordsperpage = 50;
               
               return $handler->action_admin();
          }
			
          function action_save(&$handler){
                  $attr = &$this->getAttribute($this->primary_field);
                  $attr->removeFlag(AF_PRIMARY);
                  return $handler->action_save();
          }// end function 
			
          /* START NODE MESSAGING */
          
          // this function is automatically called after a record has been updated
         function postUpdate($record){                   
               // notify the user that the record has been updated
               $this->printMessage("Record, ".$record[$this->index_field].", Updated Successfully");
               return true;
         }

          // this function is automatically called after a record has been deleted			
         function postDelete($record){                   
               // notify the user that the record has been deleted
               $this->printMessage("Record, ".$record[$this->index_field].", Deleted Successfully");
               return true;
         }

          // this function is automatically called after a record has been added
         function postAdd(&$record){                   
               $this->getMyLastId($record);
               // notify the user that the record has been created
               $this->printMessage("Record, ".$record[$this->index_field].", Created Successfully");
               return true;
         }

          /*
               Jorge Garifuna - info@garidigital.com
               created: 9/12/06
               
               this function obtains the last inserted id of specified table 
          */
          function getMyLastId(&$record){

               $db = &atkGetDb(); 
               // get the id of the last record that was inserted
               $query = "select max(".$this->primary_field.") as last_id from ".$this->table;
               $rows = $db->getrows($query);
               
               if(count($rows)>0){ 
                    $id = $rows[0]["last_id"];
                    $record[$this->primary_field] = $id;
                    $record["atkprimkey"] = $this->node.".".$this->primary_field."='$id'";                                           
               }                       
          }
          /*
               This function is a wrapper to print messages to the top of the screen
               Author: Jorge Garifuna (GariDigital.com) <info@GariDigital.com>
               Created Date: 6/27/06

               @param $message               The actual message to be printed
               @param $background_color      The background color of the bar to show message
               @param $text_color            The color of the text to be printed
               
               Note:
               - If your visual creativity is bad like mine, you can find nice colors at the following site:
                    http://www.colorcombos.com/index.html
                    
               - Make sure to include "atkimport("atk.utils.atkmessagequeue");" at the top of your node 
          
          */
          function printMessage($message, $background_color='#6787B0', $text_color='white'){
               atkMessageQueue::addMessage("<div style='background-color: ".$background_color.";'><b><font color='".$text_color."'>".$message."</font></b></div>"); //     FFAB35          
          }

          /* END NODE MESSAGING */               
               
               

		// used for header section of list view page
		function adminHeader(){
               // get messages from the queue
               $msgs =  atkMessageQueue::getMessages();
               if(count($msgs)>0){$msgs = implode("<br>", $msgs);}
               else{$msgs="";}

		     $help_text = $msgs."
                    
		          <!-- h1><font color=#FF6347>v_organisme_inscription_controle</font></h1 -->
		     ";
		     return $help_text;
		}// end function
			
		// used for footer section of list view page

			

			

		// this function is called when editing an individual record
		// any information here will be displayed on the footer section of the edited record page
		function editPage(&$handler, $record, $locked=false) 
		{ 
			return $this->detailPageFooter($handler, $record, $locked);
		}          
			

		// this function is called when viewing an individual record
		// any information here will be displayed on the footer section of the viewed record page
		function viewPage(&$handler, $record, $locked=false) 
		{ 
			return $this->detailPageFooter($handler, $record, $locked,"view");
		}          
			

		
		// this is a custom helper function for editPage and viewPage
		// you can consolidate operations here unless you need to display different information
		// when editing and viewing the record
		// the information will be displayed on the footer page when editing or viewing an individual record	
		function detailPageFooter(&$handler, $record, $locked=false, $mode="edit") 
		{ 
			if($mode == "view"){
				$page = $handler->viewPage($record, $locked); 
			}else{// edit
				$page = $handler->editPage($record, $locked); 
			}
			
			$data_info = "";
			$page .= $data_info;
			
			return $page; 
		}       // end function    

			
}// end node v_organisme_inscription_controle

?>